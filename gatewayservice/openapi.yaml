openapi: 3.0.0
info:
  title: API Gateway
  description: API Gateway que redirige a varios microservicios como LLM, User, y Game.
  version: 1.0.0
servers:
  - url: 'http://localhost:8000'
    description: 'API Gateway'
paths:
  /api/login:
    post:
      summary: 'Login de usuario'
      description: 'Este endpoint redirige al User Service para realizar el login del usuario.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'usuario@ejemplo.com'
                password:
                  type: string
                  example: 'contraseña123'
      responses:
        '200':
          description: 'Login exitoso'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Login exitoso'
                  token:
                    type: string
                    example: 'jwt-token-aqui'
        '400':
          description: 'Faltan campos requeridos'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Se requieren email y password.'
        '401':
          description: 'Credenciales inválidas'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Credenciales inválidas.'
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error interno del servidor.'

  /api/register:
    post:
      summary: 'Registro de usuario'
      description: 'Este endpoint redirige al User Service para registrar un nuevo usuario.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Nuevo Usuario'
                email:
                  type: string
                  example: 'nuevo@ejemplo.com'
                password:
                  type: string
                  example: 'contraseña123'
      responses:
        '201':
          description: 'Registro exitoso'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Registro exitoso'
                  token:
                    type: string
                    example: 'jwt-token-aqui'
        '400':
          description: 'Faltan campos requeridos'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Se requieren nombre, email y password.'
        '409':
          description: 'Usuario ya registrado'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'El usuario ya existe.'
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error interno del servidor.'

  /api/chatbot:
    post:
      summary: 'Interacción con chatbot'
      description: 'Este endpoint envía mensajes al servicio LLM para obtener respuestas de IA.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'Hola, ¿cómo estás?'
      responses:
        '200':
          description: 'Respuesta del chatbot'
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    example: '¡Hola! ¿En qué puedo ayudarte?'
        '500':
          description: 'Error al contactar con el servicio de LLM'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Error al contactar con el LLM Service'

  /api/generate-questions:
    get:
      summary: 'Generación de preguntas de juego'
      description: 'Este endpoint redirige al Game Service para obtener nuevas preguntas de juego.'
      responses:
        '200':
          description: 'Preguntas generadas exitosamente'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: 'Error al contactar con el Game Service'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Error al contactar con el Game Service'

  /api/ranking:
    get:
      summary: 'Consulta del ranking de jugadores'
      description: 'Obtiene la lista de jugadores ordenados por puntuación y tiempo total.'
      responses:
        '200':
          description: 'Ranking obtenido exitosamente'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: 'Error al obtener el ranking'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Error al cargar el ranking'

  /api/save-score:
    post:
      summary: 'Guardar puntuación de usuario'
      description: 'Envía la puntuación del usuario al Game Service para su almacenamiento.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: '1234567890abcdef'
                score:
                  type: integer
                  example: 100
                totalTime:
                  type: integer
                  example: 120
      responses:
        '200':
          description: 'Puntuación guardada exitosamente'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Puntuación guardada correctamente'
        '500':
          description: 'Error al guardar la puntuación'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Error al guardar resultados'
